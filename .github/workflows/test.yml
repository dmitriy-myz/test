name: build
on:
  push:
    branches:
      - '**'
  #pull_request:
  workflow_dispatch:
    inputs:
      clean_build:
        description: 'build all'
        required: false
        default: false
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref_name != 'master' }}

jobs:
  compile:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - id: checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          ref: ${{ github.sha }}

      - name: Print debug message
        shell: bash
        run: |
          echo "GITHUB_SHA=${GITHUB_SHA}"
          echo "GITHUB_REF=${GITHUB_REF}"
          echo "github.ref=${{ github.ref }}"
          echo "github.sha=${{ github.sha }}"
      - name: trigger deploy event
        if: github.ref_type == 'branch'
        shell: bash
        run: |          
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "${{ github.api_url }}/repos/${{ github.repository }}/deployments" \
          -d '{
            "ref":"${{ github.ref_name }}",
            "environment": "qa",
            "auto_merge": true,
            "required_contexts": [],
            "payload":"{ \"min_date\": \"2024-06-01\" }","description":"Deploy request from ${{ github.actor }}"
          }'
          
          
          
          #       "username": username,
          #        "base_branch": base_branch,
          #        "min_date": min_date,
          #        "branch": head_branch

      - name: update deployment status
        if: github.ref_type == 'branch'
        shell: bash
        run: |
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "${{ github.api_url }}/repos/${{ github.repository }}/deployments/${{ github.deployment_id }}/statuses" \
          -d '{
            "state": "success",
            "environment": "qa",
            "description": "Deployed successfully",
            "log_url": "https://log-collector.example.com/1234",
            "environment_url": "https://my.example.com/"
            }'